{
  "contractName": "TestContract",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/selimerunkut/dev_freelance/GhostMarketContractBSC/contracts/test_stuff.sol\":\"TestContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1337},\"remappings\":[]},\"sources\":{\"/Users/selimerunkut/dev_freelance/GhostMarketContractBSC/contracts/test_stuff.sol\":{\"keccak256\":\"0x06686a8f64b6ae0050f98e05b6850b0a59954ad8bb6fcbcd55bbfc13ed658a63\",\"urls\":[\"bzz-raw://e6b348a667bd8132c22edcb5db1c60632dd79c2c53f669db58e41c535894dd6f\",\"dweb:/ipfs/QmVbmeQW23sX1QU9CGs3QsGzbrQDVjizvWN6dWDuEGPmei\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220439ccbeb66b3a03a1e3668c38a7299a48adc29a4e5d9b7e5b461092218fc9c6764736f6c63430008030033",
  "deployedBytecode": "0x6080604052600080fdfea2646970667358221220439ccbeb66b3a03a1e3668c38a7299a48adc29a4e5d9b7e5b461092218fc9c6764736f6c63430008030033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "25:1108:4:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "25:1108:4:-:0;;;;;",
  "source": "pragma solidity ^0.8.3;\n\ncontract TestContract {\n\n /*    struct StateStruct {\n        bytes32 tokenID;\n        mapping(bytes32 => bytes32) sub_state;\n    }\n\n    struct ObjectStruct {\n        StateStruct state;\n        address owner;\n        bool isObject;\n    }\n    mapping(bytes32 => ObjectStruct) public objectStructs;\n    bytes32[] public objectList;\n\n    event LogNewObject(\n        address sender,\n        bytes32 _object_id,\n        bytes32 state,\n        address owner\n    );\n\n\n\n     function newObject(\n        bytes32 _object_id,\n        bytes32 _state,\n        address _owner\n    ) public returns (bool success) {\n        require(!isObject(_object_id));\n\n        objectStructs[_object_id].state = _state;\n\n        objectStructs[id].state.sub_state[\"location\"] = \"Paris\";\n        objectStructs[id].state.sub_state[\"sold\"] = \"Yes\";\n        objectStructs[id].state.sub_state[\"price\"] = 50; \n\n        objectStructs[_object_id].owner = _owner;\n        objectStructs[_object_id].isObject = true;\n        objectList.push(_object_id);\n\n        LogNewObject(msg.sender, _object_id, _state, _owner);\n        return true; \n    }\n*/\n\n}\n",
  "sourcePath": "/Users/selimerunkut/dev_freelance/GhostMarketContractBSC/contracts/test_stuff.sol",
  "ast": {
    "absolutePath": "/Users/selimerunkut/dev_freelance/GhostMarketContractBSC/contracts/test_stuff.sol",
    "exportedSymbols": {
      "TestContract": [
        547
      ]
    },
    "id": 548,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 546,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 547,
        "linearizedBaseContracts": [
          547
        ],
        "name": "TestContract",
        "nameLocation": "34:12:4",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 548,
        "src": "25:1108:4"
      }
    ],
    "src": "0:1134:4"
  },
  "legacyAST": {
    "absolutePath": "/Users/selimerunkut/dev_freelance/GhostMarketContractBSC/contracts/test_stuff.sol",
    "exportedSymbols": {
      "TestContract": [
        547
      ]
    },
    "id": 548,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 546,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 547,
        "linearizedBaseContracts": [
          547
        ],
        "name": "TestContract",
        "nameLocation": "34:12:4",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 548,
        "src": "25:1108:4"
      }
    ],
    "src": "0:1134:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.3+commit.8d00100c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-04-22T18:25:10.011Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}